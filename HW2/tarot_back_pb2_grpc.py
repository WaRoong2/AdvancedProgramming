# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

import tarot_back_pb2 as tarot__back__pb2


class infoManagerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ChkInfo = channel.unary_unary(
                '/infoManager/ChkInfo',
                request_serializer=tarot__back__pb2.idRequest.SerializeToString,
                response_deserializer=tarot__back__pb2.procResult.FromString,
                )
        self.SetInfo = channel.unary_unary(
                '/infoManager/SetInfo',
                request_serializer=tarot__back__pb2.infoData.SerializeToString,
                response_deserializer=tarot__back__pb2.procResult.FromString,
                )
        self.GetInfo = channel.unary_unary(
                '/infoManager/GetInfo',
                request_serializer=tarot__back__pb2.idRequest.SerializeToString,
                response_deserializer=tarot__back__pb2.infoData.FromString,
                )
        self.SignUp = channel.unary_unary(
                '/infoManager/SignUp',
                request_serializer=tarot__back__pb2.loginRequest.SerializeToString,
                response_deserializer=tarot__back__pb2.procResult.FromString,
                )
        self.LogIn = channel.unary_unary(
                '/infoManager/LogIn',
                request_serializer=tarot__back__pb2.loginRequest.SerializeToString,
                response_deserializer=tarot__back__pb2.procResult.FromString,
                )
        self.ChngPw = channel.unary_unary(
                '/infoManager/ChngPw',
                request_serializer=tarot__back__pb2.chngPwRequest.SerializeToString,
                response_deserializer=tarot__back__pb2.procResult.FromString,
                )
        self.DelAccount = channel.unary_unary(
                '/infoManager/DelAccount',
                request_serializer=tarot__back__pb2.loginRequest.SerializeToString,
                response_deserializer=tarot__back__pb2.procResult.FromString,
                )


class infoManagerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def ChkInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SetInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetInfo(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SignUp(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LogIn(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ChngPw(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DelAccount(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_infoManagerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ChkInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.ChkInfo,
                    request_deserializer=tarot__back__pb2.idRequest.FromString,
                    response_serializer=tarot__back__pb2.procResult.SerializeToString,
            ),
            'SetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.SetInfo,
                    request_deserializer=tarot__back__pb2.infoData.FromString,
                    response_serializer=tarot__back__pb2.procResult.SerializeToString,
            ),
            'GetInfo': grpc.unary_unary_rpc_method_handler(
                    servicer.GetInfo,
                    request_deserializer=tarot__back__pb2.idRequest.FromString,
                    response_serializer=tarot__back__pb2.infoData.SerializeToString,
            ),
            'SignUp': grpc.unary_unary_rpc_method_handler(
                    servicer.SignUp,
                    request_deserializer=tarot__back__pb2.loginRequest.FromString,
                    response_serializer=tarot__back__pb2.procResult.SerializeToString,
            ),
            'LogIn': grpc.unary_unary_rpc_method_handler(
                    servicer.LogIn,
                    request_deserializer=tarot__back__pb2.loginRequest.FromString,
                    response_serializer=tarot__back__pb2.procResult.SerializeToString,
            ),
            'ChngPw': grpc.unary_unary_rpc_method_handler(
                    servicer.ChngPw,
                    request_deserializer=tarot__back__pb2.chngPwRequest.FromString,
                    response_serializer=tarot__back__pb2.procResult.SerializeToString,
            ),
            'DelAccount': grpc.unary_unary_rpc_method_handler(
                    servicer.DelAccount,
                    request_deserializer=tarot__back__pb2.loginRequest.FromString,
                    response_serializer=tarot__back__pb2.procResult.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'infoManager', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class infoManager(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def ChkInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/infoManager/ChkInfo',
            tarot__back__pb2.idRequest.SerializeToString,
            tarot__back__pb2.procResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/infoManager/SetInfo',
            tarot__back__pb2.infoData.SerializeToString,
            tarot__back__pb2.procResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetInfo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/infoManager/GetInfo',
            tarot__back__pb2.idRequest.SerializeToString,
            tarot__back__pb2.infoData.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SignUp(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/infoManager/SignUp',
            tarot__back__pb2.loginRequest.SerializeToString,
            tarot__back__pb2.procResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LogIn(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/infoManager/LogIn',
            tarot__back__pb2.loginRequest.SerializeToString,
            tarot__back__pb2.procResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ChngPw(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/infoManager/ChngPw',
            tarot__back__pb2.chngPwRequest.SerializeToString,
            tarot__back__pb2.procResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def DelAccount(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/infoManager/DelAccount',
            tarot__back__pb2.loginRequest.SerializeToString,
            tarot__back__pb2.procResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class TarotPlayerStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.GetCards = channel.unary_unary(
                '/TarotPlayer/GetCards',
                request_serializer=tarot__back__pb2.cardRequest.SerializeToString,
                response_deserializer=tarot__back__pb2.cardResponse.FromString,
                )
        self.SaveTarot = channel.unary_unary(
                '/TarotPlayer/SaveTarot',
                request_serializer=tarot__back__pb2.saveRequest.SerializeToString,
                response_deserializer=tarot__back__pb2.procResult.FromString,
                )
        self.LoadTarot = channel.unary_unary(
                '/TarotPlayer/LoadTarot',
                request_serializer=tarot__back__pb2.idRequest.SerializeToString,
                response_deserializer=tarot__back__pb2.tarotRecords.FromString,
                )


class TarotPlayerServicer(object):
    """Missing associated documentation comment in .proto file."""

    def GetCards(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SaveTarot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def LoadTarot(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_TarotPlayerServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'GetCards': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCards,
                    request_deserializer=tarot__back__pb2.cardRequest.FromString,
                    response_serializer=tarot__back__pb2.cardResponse.SerializeToString,
            ),
            'SaveTarot': grpc.unary_unary_rpc_method_handler(
                    servicer.SaveTarot,
                    request_deserializer=tarot__back__pb2.saveRequest.FromString,
                    response_serializer=tarot__back__pb2.procResult.SerializeToString,
            ),
            'LoadTarot': grpc.unary_unary_rpc_method_handler(
                    servicer.LoadTarot,
                    request_deserializer=tarot__back__pb2.idRequest.FromString,
                    response_serializer=tarot__back__pb2.tarotRecords.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'TarotPlayer', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class TarotPlayer(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def GetCards(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TarotPlayer/GetCards',
            tarot__back__pb2.cardRequest.SerializeToString,
            tarot__back__pb2.cardResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SaveTarot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TarotPlayer/SaveTarot',
            tarot__back__pb2.saveRequest.SerializeToString,
            tarot__back__pb2.procResult.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def LoadTarot(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/TarotPlayer/LoadTarot',
            tarot__back__pb2.idRequest.SerializeToString,
            tarot__back__pb2.tarotRecords.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
